{"metadata":"{\"defaultCompiler\":{\"version\":\"0.8.20\"},\"sources\":{\"contracts/lib/Create2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {Create2} from \\\"@openzeppelin/contracts/utils/Create2.sol\\\";\\n\\n/**\\n * @title   Create2Factory\\n * @notice  Deploy contracts using CREATE2 opcode.\\n */\\ncontract Create2Factory {\\n    event Deployed(bytes32 indexed salt, address deployed);\\n\\n    receive() external payable {}\\n\\n    function deploy(\\n        uint256 amount,\\n        bytes32 salt,\\n        bytes calldata bytecode,\\n        bytes[] calldata callbacks\\n    ) external returns (address) {\\n        address deployedAddress = Create2.deploy(amount, salt, bytecode);\\n        uint256 len = callbacks.length;\\n        if (len > 0) {\\n            for (uint256 i = 0; i < len; i++) {\\n                _execute(deployedAddress, callbacks[i]);\\n            }\\n        }\\n\\n        emit Deployed(salt, deployedAddress);\\n\\n        return deployedAddress;\\n    }\\n\\n    function _execute(\\n        address _to,\\n        bytes calldata _data\\n    ) private returns (bool, bytes memory) {\\n        (bool success, bytes memory result) = _to.call(_data);\\n        require(success, \\\"!success\\\");\\n\\n        return (success, result);\\n    }\\n\\n    function computeAddress(\\n        bytes32 salt,\\n        bytes32 codeHash\\n    ) external view returns (address) {\\n        return Create2.computeAddress(salt, codeHash);\\n    }\\n}\\n\",\"versionPragma\":\"^0.8.0\"},\"@openzeppelin/contracts/utils/Create2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Create2.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\\n * `CREATE2` can be used to compute in advance the address where a smart\\n * contract will be deployed, which allows for interesting new mechanisms known\\n * as 'counterfactual interactions'.\\n *\\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\\n * information.\\n */\\nlibrary Create2 {\\n    /**\\n     * @dev Not enough balance for performing a CREATE2 deploy.\\n     */\\n    error Create2InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev There's no code to deploy.\\n     */\\n    error Create2EmptyBytecode();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error Create2FailedDeployment();\\n\\n    /**\\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\\n     * will be deployed can be known in advance via {computeAddress}.\\n     *\\n     * The bytecode for a contract can be obtained from Solidity with\\n     * `type(contractName).creationCode`.\\n     *\\n     * Requirements:\\n     *\\n     * - `bytecode` must not be empty.\\n     * - `salt` must have not been used for `bytecode` already.\\n     * - the factory must have a balance of at least `amount`.\\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\\n     */\\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\\n        if (address(this).balance < amount) {\\n            revert Create2InsufficientBalance(address(this).balance, amount);\\n        }\\n        if (bytecode.length == 0) {\\n            revert Create2EmptyBytecode();\\n        }\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\\n        }\\n        if (addr == address(0)) {\\n            revert Create2FailedDeployment();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\\n     * `bytecodeHash` or `salt` will result in a new destination address.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\\n        return computeAddress(salt, bytecodeHash, address(this));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40) // Get free memory pointer\\n\\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\\n            // | 0xFF              |            FF                                                             |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\\n\\n            mstore(add(ptr, 0x40), bytecodeHash)\\n            mstore(add(ptr, 0x20), salt)\\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\\n            mstore8(start, 0xff)\\n            addr := keccak256(start, 85)\\n        }\\n    }\\n}\\n\",\"versionPragma\":\"^0.8.20\"}}}","address":"0x7771117a5171B643C0aDaEfa863703ac929c2Ccf","bytecode":"0x608060405234801561001057600080fd5b50610893806100206000396000f3fe60806040526004361061002d5760003560e01c80632276f38314610039578063481286e61461007657610034565b3661003457005b600080fd5b34801561004557600080fd5b50610060600480360381019061005b91906104f5565b6100b3565b60405161006d91906105dd565b60405180910390f35b34801561008257600080fd5b5061009d600480360381019061009891906105f8565b6101af565b6040516100aa91906105dd565b60405180910390f35b600080610105888888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506101c3565b9050600084849050905060008111156101685760005b81811015610166576101518387878481811061013a57610139610638565b5b905060200281019061014c9190610676565b6102bf565b5050808061015e90610708565b91505061011b565b505b877fe491e278e37782abe0872fe7c7b549cd7b0713d0c5c1e84a81899a5fdf32087b8360405161019891906105dd565b60405180910390a281925050509695505050505050565b60006101bb8383610384565b905092915050565b60008347101561020c5747846040517fe4bbecac00000000000000000000000000000000000000000000000000000000815260040161020392919061075f565b60405180910390fd5b6000825103610247576040517f4ca249dc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8282516020840186f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102b8576040517f741752c200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b600060606000808673ffffffffffffffffffffffffffffffffffffffff1686866040516102ed9291906107c7565b6000604051808303816000865af19150503d806000811461032a576040519150601f19603f3d011682016040523d82523d6000602084013e61032f565b606091505b509150915081610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036b9061083d565b60405180910390fd5b8181935093505050935093915050565b6000610391838330610399565b905092915050565b6000604051836040820152846020820152828152600b810160ff815360558120925050509392505050565b600080fd5b600080fd5b6000819050919050565b6103e1816103ce565b81146103ec57600080fd5b50565b6000813590506103fe816103d8565b92915050565b6000819050919050565b61041781610404565b811461042257600080fd5b50565b6000813590506104348161040e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261045f5761045e61043a565b5b8235905067ffffffffffffffff81111561047c5761047b61043f565b5b60208301915083600182028301111561049857610497610444565b5b9250929050565b60008083601f8401126104b5576104b461043a565b5b8235905067ffffffffffffffff8111156104d2576104d161043f565b5b6020830191508360208202830111156104ee576104ed610444565b5b9250929050565b60008060008060008060808789031215610512576105116103c4565b5b600061052089828a016103ef565b965050602061053189828a01610425565b955050604087013567ffffffffffffffff811115610552576105516103c9565b5b61055e89828a01610449565b9450945050606087013567ffffffffffffffff811115610581576105806103c9565b5b61058d89828a0161049f565b92509250509295509295509295565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105c78261059c565b9050919050565b6105d7816105bc565b82525050565b60006020820190506105f260008301846105ce565b92915050565b6000806040838503121561060f5761060e6103c4565b5b600061061d85828601610425565b925050602061062e85828601610425565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261069357610692610667565b5b80840192508235915067ffffffffffffffff8211156106b5576106b461066c565b5b6020830192506001820236038313156106d1576106d0610671565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610713826103ce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610745576107446106d9565b5b600182019050919050565b610759816103ce565b82525050565b60006040820190506107746000830185610750565b6107816020830184610750565b9392505050565b600081905092915050565b82818337600083830152505050565b60006107ae8385610788565b93506107bb838584610793565b82840190509392505050565b60006107d48284866107a2565b91508190509392505050565b600082825260208201905092915050565b7f2173756363657373000000000000000000000000000000000000000000000000600082015250565b60006108276008836107e0565b9150610832826107f1565b602082019050919050565b600060208201905081810360008301526108568161081a565b905091905056fea26469706673582212202d36e9533de727f67ccce3be00d294dc08ea69508f7d809f2f494dd9f38d407b64736f6c63430008140033","deployedBytecode":"0x60806040526004361061002d5760003560e01c80632276f38314610039578063481286e61461007657610034565b3661003457005b600080fd5b34801561004557600080fd5b50610060600480360381019061005b91906104f5565b6100b3565b60405161006d91906105dd565b60405180910390f35b34801561008257600080fd5b5061009d600480360381019061009891906105f8565b6101af565b6040516100aa91906105dd565b60405180910390f35b600080610105888888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506101c3565b9050600084849050905060008111156101685760005b81811015610166576101518387878481811061013a57610139610638565b5b905060200281019061014c9190610676565b6102bf565b5050808061015e90610708565b91505061011b565b505b877fe491e278e37782abe0872fe7c7b549cd7b0713d0c5c1e84a81899a5fdf32087b8360405161019891906105dd565b60405180910390a281925050509695505050505050565b60006101bb8383610384565b905092915050565b60008347101561020c5747846040517fe4bbecac00000000000000000000000000000000000000000000000000000000815260040161020392919061075f565b60405180910390fd5b6000825103610247576040517f4ca249dc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8282516020840186f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102b8576040517f741752c200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b600060606000808673ffffffffffffffffffffffffffffffffffffffff1686866040516102ed9291906107c7565b6000604051808303816000865af19150503d806000811461032a576040519150601f19603f3d011682016040523d82523d6000602084013e61032f565b606091505b509150915081610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036b9061083d565b60405180910390fd5b8181935093505050935093915050565b6000610391838330610399565b905092915050565b6000604051836040820152846020820152828152600b810160ff815360558120925050509392505050565b600080fd5b600080fd5b6000819050919050565b6103e1816103ce565b81146103ec57600080fd5b50565b6000813590506103fe816103d8565b92915050565b6000819050919050565b61041781610404565b811461042257600080fd5b50565b6000813590506104348161040e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261045f5761045e61043a565b5b8235905067ffffffffffffffff81111561047c5761047b61043f565b5b60208301915083600182028301111561049857610497610444565b5b9250929050565b60008083601f8401126104b5576104b461043a565b5b8235905067ffffffffffffffff8111156104d2576104d161043f565b5b6020830191508360208202830111156104ee576104ed610444565b5b9250929050565b60008060008060008060808789031215610512576105116103c4565b5b600061052089828a016103ef565b965050602061053189828a01610425565b955050604087013567ffffffffffffffff811115610552576105516103c9565b5b61055e89828a01610449565b9450945050606087013567ffffffffffffffff811115610581576105806103c9565b5b61058d89828a0161049f565b92509250509295509295509295565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105c78261059c565b9050919050565b6105d7816105bc565b82525050565b60006020820190506105f260008301846105ce565b92915050565b6000806040838503121561060f5761060e6103c4565b5b600061061d85828601610425565b925050602061062e85828601610425565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261069357610692610667565b5b80840192508235915067ffffffffffffffff8211156106b5576106b461066c565b5b6020830192506001820236038313156106d1576106d0610671565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610713826103ce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610745576107446106d9565b5b600182019050919050565b610759816103ce565b82525050565b60006040820190506107746000830185610750565b6107816020830184610750565b9392505050565b600081905092915050565b82818337600083830152505050565b60006107ae8385610788565b93506107bb838584610793565b82840190509392505050565b60006107d48284866107a2565b91508190509392505050565b600082825260208201905092915050565b7f2173756363657373000000000000000000000000000000000000000000000000600082015250565b60006108276008836107e0565b9150610832826107f1565b602082019050919050565b600060208201905081810360008301526108568161081a565b905091905056fea26469706673582212202d36e9533de727f67ccce3be00d294dc08ea69508f7d809f2f494dd9f38d407b64736f6c63430008140033","abi":[{"inputs":[],"name":"Create2EmptyBytecode","type":"error"},{"inputs":[],"name":"Create2FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"Create2InsufficientBalance","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"salt","type":"bytes32"},{"indexed":false,"internalType":"address","name":"deployed","type":"address"}],"name":"Deployed","type":"event"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"codeHash","type":"bytes32"}],"name":"computeAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes","name":"bytecode","type":"bytes"},{"internalType":"bytes[]","name":"callbacks","type":"bytes[]"}],"name":"deploy","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}]}